--- a/src/components/Search.jsx
+++ b/src/components/Search.jsx
@@ -1,17 +1,23 @@
 import { useEffect, useState } from 'react';

-import { Autocomplete, Box, TextField, Button, List, ListItem, ListItemText, Typography } from '@mui/material';

+import { Autocomplete, Box, TextField, Button, Typography } from '@mui/material';

 import useLocalStorageState from 'use-local-storage-state';

 import SearchIcon from '@mui/icons-material/Search';

+import FavoriteIcon from '@mui/icons-material/Favorite';

 import fetchWeather from '../api/weatherApi';

 import SearchResult from './SearchResult';

-import FavoriteIcon from '@mui/icons-material/Favorite';

 import PropTypes from 'prop-types';

-function Search() {

+

+function Search({ isFavorite, onAddFavorite }) {

   const [inputValue, setInputValue] = useState('');

   const [city, setCity] = useState('');

   const [result, setResult] = useState(null);   // holds temps or null

   const [loading, setLoading] = useState(false);

   const [error, setError] = useState('');       // string for error message

+

+  // Persist previous queries (like 2024)

+  const [keywordList, setKeywordList] = useLocalStorageState('WeatherApp/Search/KeywordList', {

+    defaultValue: []

+  });

 

   useEffect(() => {

     const fetchData = async () => {

@@ -21,6 +27,10 @@
       const temps = await fetchWeather(city);

       if (temps) {

         setResult(temps);

+        // Save successful query to history

+        if (city && !keywordList.includes(city)) {

+          setKeywordList([...keywordList, city]);

+        }

       } else {

         setError('No se encontró la ciudad o hubo un problema al obtener el clima.');

       }

@@ -30,7 +40,7 @@
     if (city) {

       fetchData();

     }

-  }, [city]);

+  }, [city]); // eslint-disable-line react-hooks/exhaustive-deps

 

   const handleSearch = () => {

     const trimmed = inputValue.trim();

@@ -45,17 +55,25 @@
   return (

     <>

       <Box sx={{ m: 2, maxWidth: 600, mx: 'auto', bgcolor: 'white' }}>

-        <TextField

-          label="Buscar ciudad"

-          variant="outlined"

-          fullWidth

+        <Autocomplete

+          freeSolo

+          options={keywordList}

           value={inputValue}

-          onChange={(e) => setInputValue(e.target.value)}

-          sx={{ mb: 2 }}

-          onKeyDown={(e) => {

-            if (e.key === 'Enter') handleSearch();

-          }}

+          onInputChange={(_, newInputValue) => setInputValue(newInputValue)}

+          renderInput={(params) => (

+            <TextField

+              {...params}

+              label="Buscar ciudad"

+              variant="outlined"

+              fullWidth

+              sx={{ mb: 2 }}

+              onKeyDown={(e) => {

+                if (e.key === 'Enter') handleSearch();

+              }}

+            />

+          )}

         />

+

         <Button

           variant="contained"

           color="primary"

@@ -74,7 +92,23 @@
       </Box>

 

       {/* Only render SearchResult if there is a successful result */}

-      {result && <SearchResult city={city} temps={result} />}

+      {result && (

+        <Box sx={{ m: 2, maxWidth: 600, mx: 'auto' }}>

+          <SearchResult city={city} temps={result} />

+          {/* Favorite action (like 2024) */}

+          {typeof isFavorite === 'function' && typeof onAddFavorite === 'function' && !isFavorite(city) && (

+            <Button

+              variant="outlined"

+              color="secondary"

+              onClick={() => onAddFavorite(city)}

+              startIcon={<FavoriteIcon />}

+              sx={{ mt: 2, width: '100%' }}

+            >

+              Agregar al Inicio

+            </Button>

+          )}

+        </Box>

+      )}

     </>

   );

 }

--- a/src/App.jsx
+++ b/src/App.jsx
@@ -1,84 +1,50 @@
-import { useState } from 'react';

-import { Routes, Route, Link } from 'react-router-dom';

-import { AppBar, Toolbar, Typography, IconButton, Drawer, List, ListItem, ListItemText, ListItemIcon, ListItemButton } from '@mui/material';

-import { Card, CardContent } from '@mui/material';

-import MenuIcon from '@mui/icons-material/Menu';

+import { useMemo } from 'react';

+import { Routes, Route, Link, useLocation } from 'react-router-dom';

+import useLocalStorageState from 'use-local-storage-state';

+import { AppBar, Toolbar, Typography, IconButton, Container, Box, Button } from '@mui/material';

 import HomeIcon from '@mui/icons-material/Home';

 import SearchIcon from '@mui/icons-material/Search';

 import Weather from './components/Weather';

+import Home from './components/Home';

 import Search from './components/Search';

 

-function Home() {

-  return (

-    <Card sx={{ m: 2, maxWidth: 600, mx: "auto" }}>

-      <CardContent>

-        <Typography variant="h5" component="h2" gutterBottom>

-          Información del Clima

-        </Typography>

-        <Weather />

-      </CardContent>

-    </Card>

-  );

-}

+function App() {

+  // Favorites persisted

+  const [favorites, setFavorites] = useLocalStorageState('WeatherApp/Favorites', {

+    defaultValue: ['Santiago de Chile'],

+  });

 

-function App() {

-  const [drawerOpen, setDrawerOpen] = useState(false);

+  const isFavorite = (name) => favorites.includes(name);

+  const onAddFavorite = (name) => {

+    if (!name) return;

+    if (!favorites.includes(name)) setFavorites([...favorites, name]);

+  };

+  const removeFavorite = (name) => {

+    setFavorites(favorites.filter((c) => c !== name));

+  };

 

-  const toggleDrawer = () => {

-    setDrawerOpen(!drawerOpen);

-  };

+  const location = useLocation();

+  const title = useMemo(() => {

+    if (location.pathname === '/search') return 'Buscar ciudad';

+    return 'Clima';

+  }, [location.pathname]);

 

   return (

     <>

       <AppBar position="fixed">

         <Toolbar>

-          <IconButton

-            color="inherit"

-            aria-label="open drawer"

-            edge="start"

-            onClick={toggleDrawer}

-            sx={{ mr: 2 }}

-          >

-            <MenuIcon />

-          </IconButton>

-          <Typography variant="h6" noWrap component="div">

-            Weather App

-          </Typography>

+          <Typography variant="h6" sx={{ flexGrow: 1 }}>{title}</Typography>

+          <Button color="inherit" component={Link} to="/" startIcon={<HomeIcon />}>Inicio</Button>

+          <Button color="inherit" component={Link} to="/search" startIcon={<SearchIcon />}>Buscar</Button>

         </Toolbar>

       </AppBar>

-      <Drawer

-        variant="temporary"

-        open={drawerOpen}

-        onClose={toggleDrawer}

-        ModalProps={{

-          keepMounted: true,

-        }}

-      >

-        <List>

-          <ListItem disablePadding>

-            <ListItemButton component={Link} to="/" onClick={toggleDrawer}>

-              <ListItemIcon>

-                <HomeIcon />

-              </ListItemIcon>

-              <ListItemText primary="Inicio" />

-            </ListItemButton>

-          </ListItem>

-

-          <ListItem disablePadding>

-            <ListItemButton component={Link} to="/search" onClick={toggleDrawer}>

-              <ListItemIcon>

-                <SearchIcon />

-              </ListItemIcon>

-              <ListItemText primary="Buscar" />

-            </ListItemButton>

-          </ListItem>

-        </List>

-      </Drawer>

       <Toolbar />

-      <Routes>

-        <Route path="/" element={<Home />} />

-        <Route path="/search" element={<Search />} />

-      </Routes>

+      <Container maxWidth="sm">

+        <Routes>

+          <Route path="/" element={<Home favorites={favorites} removeFavorite={removeFavorite} />} />

+          <Route path="/search" element={<Search isFavorite={isFavorite} onAddFavorite={onAddFavorite} />} />

+        </Routes>

+      </Container>

     </>

   );

 }
